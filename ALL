## 1️⃣ DES

```java
import javax.crypto.*; import java.util.*;
public class DES {
  public static void main(String[] a) throws Exception {
    var k = KeyGenerator.getInstance("DES").generateKey();
    var c = Cipher.getInstance("DES");
    String t = "HelloWorld";
    c.init(Cipher.ENCRYPT_MODE, k);
    var e = c.doFinal(t.getBytes());
    c.init(Cipher.DECRYPT_MODE, k);
    var d = c.doFinal(e);
    System.out.println("Enc: " + Base64.getEncoder().encodeToString(e));
    System.out.println("Dec: " + new String(d));
  }
}
```

---

## 2️⃣ AES (ECB)

```java
import javax.crypto.*; import java.util.*;
public class AES {
  public static void main(String[] a) throws Exception {
    var k = KeyGenerator.getInstance("AES"); k.init(128);
    var key = k.generateKey();
    var c = Cipher.getInstance("AES");
    String t = "HelloWorld";
    c.init(Cipher.ENCRYPT_MODE, key);
    var e = c.doFinal(t.getBytes());
    c.init(Cipher.DECRYPT_MODE, key);
    var d = c.doFinal(e);
    System.out.println("Enc: " + Base64.getEncoder().encodeToString(e));
    System.out.println("Dec: " + new String(d));
  }
}
```

---

## 3️⃣ AES (CBC)

```java
import javax.crypto.*; import javax.crypto.spec.*; import java.security.*; import java.util.*;
public class AESCBC {
  public static void main(String[] a) throws Exception {
    var k = KeyGenerator.getInstance("AES"); k.init(128);
    var key = k.generateKey();
    byte[] iv = new byte[16]; new SecureRandom().nextBytes(iv);
    var ivs = new IvParameterSpec(iv);
    var c = Cipher.getInstance("AES/CBC/PKCS5Padding");
    String t = "HelloWorld";
    c.init(Cipher.ENCRYPT_MODE, key, ivs);
    var e = c.doFinal(t.getBytes());
    c.init(Cipher.DECRYPT_MODE, key, ivs);
    var d = c.doFinal(e);
    System.out.println("Enc: " + Base64.getEncoder().encodeToString(e));
    System.out.println("Dec: " + new String(d));
  }
}
```

---

## 4️⃣ RC4

```java
import javax.crypto.*; import java.util.*;
public class RC4 {
  public static void main(String[] a) throws Exception {
    var key = KeyGenerator.getInstance("ARCFOUR").generateKey();
    var c = Cipher.getInstance("ARCFOUR");
    String t = "HelloWorld";
    c.init(Cipher.ENCRYPT_MODE, key);
    var e = c.doFinal(t.getBytes());
    c.init(Cipher.DECRYPT_MODE, key);
    var d = c.doFinal(e);
    System.out.println("Enc: " + Base64.getEncoder().encodeToString(e));
    System.out.println("Dec: " + new String(d));
  }
}
```

---

## 5️⃣ RSA

```java
import javax.crypto.*; import java.security.*; import java.util.*;
public class RSA {
  public static void main(String[] a) throws Exception {
    var kp = KeyPairGenerator.getInstance("RSA"); kp.initialize(2048);
    var p = kp.generateKeyPair();
    var c = Cipher.getInstance("RSA");
    String t = "HelloWorld";
    c.init(Cipher.ENCRYPT_MODE, p.getPublic());
    var e = c.doFinal(t.getBytes());
    c.init(Cipher.DECRYPT_MODE, p.getPrivate());
    var d = c.doFinal(e);
    System.out.println("Enc: " + Base64.getEncoder().encodeToString(e));
    System.out.println("Dec: " + new String(d));
  }
}
```
